The user can login with google. (The user also can use the app as guest.)
Once the user logs in, user's email adress and name are stored in a database, and a welcome message with user's name is displayed.
Login processes are done on a Google OAuth login component created in react. (googlebutton.components.js)

User input: zip code, one of two hardware options (n: naked eyes, t: telescope) 
Input example) 02134,n
When the user enters input values and clicks the submit button, the values are sent from the frontend to the backend server. 

  Backend:
  - How the app works with map api and weather api:
    Using map api and the given zip code, get latitude and longitude. (The values are stored in the backend.) 
    By using the latitude and logitude values and a weather api, get hourly weather report for the next 48 hours, which is stored as one long string and returned.
    The string returned goes to the frontend.

  - How the app works with Simbad api:
    Using the latitude and longitude values from the map api, calculate right ascension and declination coordinates.
    Using Simbad api and the coordinates computed, get objects that can be seen and their information (name, coordinates, and magnitude).
    Store the information as one long string and return.
    The string returned goes to the frontend.

  Frontend:
    Get strings returned from the backend.
    In function callData, the string that contains weather information is parsed and stored in a list of dictionaries. 
    In function callData2, The string that contains object information is parsed and stored in a list of dictionaries. 
    When function App returns, use the functions to create tables to display.

Usage of DB:
- Store user's id (email address) and name.
- Store keys that should be hided.
